<?xml version="1.0" encoding="utf-8"?>
<hc:CloseableTitleWindow
	xmlns:hc="sigma.autoComplete.components.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	implements="sigma.autoComplete.components.autoComplete.interfaces.IBrowser"
	layout="absolute" width="450" height="350" 
	showCloseButton="false">
	
	<mx:Metadata>
		[Event("change")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.collections.ListCollectionView;
			import mx.events.CloseEvent;
			import mx.events.CollectionEvent;
			import mx.events.DragEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import sigma.Constants;
			import sigma.autoComplete.utils.ArrayCollectionUtils;
			import sigma.autoComplete.utils.StringUtils;
			
			
			[Bindable]
			private var _dataProvider:ListCollectionView;
						
			[Bindable]
			private var _selectedItems:Array; 
			
			[Bindable]
			private var _filterFunction:Function;
			
			[Bindable]
			private var _labelFunction:Function;
			
			[Bindable]
			private var _showOrderButtons:Boolean;
			
			private var _lang:String;
			
			public function set dataProvider( value:ListCollectionView ):void
			{
				_dataProvider = value;
			}
			
			public function set selectedItems( value:Array ):void
			{
				_selectedItems = value;
			}
			
			public function set lang(val:String):void
			{
				_lang = val ;
			}
			
			public function get selectedItems():Array
			{
				return listBuilder.selectedItems;
			}
			
			public function set filterFunction( value:Function ):void
			{
				_filterFunction = value;
			}
			
			public function set labelFunction( value:Function ):void
			{
				_labelFunction = value;
			}
			
			public function set showOrderButtons( value:Boolean ):void
			{
				_showOrderButtons = value;
			}
			
			public function init():void
			{
				okButton.setFocus();
			}
									
			private function handleOkClick():void
			{
				if (listBuilder.isChanged)
				{
					var changeEvent:Event = new Event( Event.CHANGE );
					dispatchEvent( changeEvent );
				}
				else
				{
					handleCancelClick();
				}
			}
			
			private function handleCancelClick():void
			{
				var event:CloseEvent = new CloseEvent( CloseEvent.CLOSE );
				dispatchEvent( event );
			}
						
			public function set browserFields( value:Array ):void
			{
				// do nothing (just here for the IBrowser interface)
			}
			
			public function set allowMultipleSelection( value:Boolean ):void
			{
				// do nothing (just here for the IBrowser interface)
			}

			public function set searchStr( value:String ):void
			{
				// do nothing (just here for the IBrowser interface)
			}
	
		]]>
	</mx:Script>
	
	
	<mx:VBox width="100%" height="100%">

		<hc:ListBuilder id="listBuilder" width="100%" height="100%" 
			dataProvider="{ _dataProvider }" selectedItems="{ _selectedItems }" 
			filterFunction="{ _filterFunction }" labelFunction="{ _labelFunction }" showOrderButtons="{ _showOrderButtons }"/>
		
		<mx:HBox width="100%" horizontalAlign="center" verticalAlign="middle" 
			paddingRight="10" paddingLeft="10" paddingTop="15" paddingBottom="15">
			<mx:Button label="Cancel" minWidth="{ Constants.BUTTON_WIDTH }" click="handleCancelClick()"/>
			<mx:Button id="okButton" label="OK" minWidth="{ Constants.BUTTON_WIDTH }" click="handleOkClick()"/>
		</mx:HBox>

	</mx:VBox>	

</hc:CloseableTitleWindow>